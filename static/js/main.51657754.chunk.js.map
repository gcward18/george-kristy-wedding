{"version":3,"sources":["img/kristy_george.png","img/getting_married.png","img/family_thanksgiving.jpg","img/first_dates.jpg","img/kristy_george_grand_canyon.jpg","img/kristy_george_lake_teton.jpg","img/kristy_george_teton.jpg","img/military_banquet.jpg","serviceWorker.js","constants/routes.js","components/Session/context.js","components/Firebase/firebase.js","components/Firebase/context.js","components/Firebase/index.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Navigation/index.js","components/Landing/index.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/SignOut/index.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Gallery/index.js","components/App/index.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","HOME","AuthUserContext","React","createContext","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","user","uid","database","ref","users","app","initializeApp","this","db","firestore","FirebaseContext","withFirebase","Component","props","Consumer","firebase","withAuthentication","WithAuthentication","state","authUser","listener","onAuthStateChanged","setState","Provider","value","withAuthorization","condition","WithAuthorization","history","push","compose","withRouter","NavigationAuth","Navbar","className","Brand","href","Collapse","Nav","Link","NavigationNonAuth","Navigation","Landing","Container","fluid","Row","Col","xs","Image","src","GM","rounded","BG","style","boxShadow","height","width","INITIAL_STATE","username","passwordOne","passwordTwo","error","SignUpFormBase","onSubmit","event","then","set","ROUTES","catch","preventDefault","onChange","target","name","isInvalid","type","placeholder","disabled","SignUpLink","to","SignUpForm","SignUpPage","PasswordForgetFormBase","message","PasswordForgetLink","PasswordForgetForm","SignInFormBase","SignInForm","SignInPage","onClick","num_party","notes","HomePageBase","attending","isAttending","collection","doc","console","log","e","Form","Group","as","controlID","Label","Control","min","controlId","rows","Button","variant","HomePageForm","HomePage","PasswordChangeForm","PasswordChange","title","img","FTG","FD","GC","LT","GT","MB","GalleryPageBase","elements","key","CarouselItem","maxHeight","display","justifyContent","Carousel","GalleryPageForm","GalleryPage","basename","exact","path","component","LandingPage","SignOutButton","AccountPage","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.51657754.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kristy_george.ea8cd5c1.png\";","module.exports = __webpack_public_path__ + \"static/media/getting_married.5611bf42.png\";","module.exports = __webpack_public_path__ + \"static/media/family_thanksgiving.ad9ac46e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/first_dates.8336b502.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kristy_george_grand_canyon.5fc03c55.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kristy_george_lake_teton.7afa571f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kristy_george_teton.fac05b99.jpg\";","module.exports = __webpack_public_path__ + \"static/media/military_banquet.060fda32.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","var kg = 'george-kristy-wedding'\nexport const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const GALLERY = '/gallery';","import React from 'react';\nconst AuthUserContext = React.createContext(null);\nexport default AuthUserContext;","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/database';\nconst config = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  };\nclass Firebase {\n    constructor() {\n        app.initializeApp(config);\n        this.auth = app.auth();\n        this.database = app.database();\n        this.db = app.firestore();\n    }\n  // *** Auth API ***\n  doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n  doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n  doSignOut = () => this.auth.signOut();\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n  doPasswordUpdate = password =>\n    this.auth.currentUser.updatePassword(password);\n\n  // *** User API ***\n  user = uid => this.database.ref(`users/${uid}`);\n  users = () => this.database.ref('users');\n}\nexport default Firebase;","import React from 'react';\nconst FirebaseContext = React.createContext(null);\nexport default FirebaseContext;\nexport const withFirebase = Component => props => (\n    <FirebaseContext.Consumer>\n      {firebase => <Component {...props} firebase={firebase} />}\n    </FirebaseContext.Consumer>\n  );\n","import Firebase from './firebase';\nimport FirebaseContext, { withFirebase } from './context';\nexport default Firebase;\nexport { FirebaseContext, withFirebase };","import React from 'react';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        authUser: null,\n      };\n    }\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\n        authUser => {\n          authUser\n            ? this.setState({ authUser })\n            : this.setState({ authUser: null });\n        },\n      );\n    }\n    componentWillUnmount() {\n      this.listener();\n    }\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n  return withFirebase(WithAuthentication);\n};\nexport default withAuthentication;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\n        authUser => {\n          if (!condition(authUser)) {\n            this.props.history.push(ROUTES.SIGN_IN);\n          }\n        },\n      );\n    }\n    componentWillUnmount() {\n      this.listener();\n    }\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>      );\n    }\n  }\n  return compose(\n    withRouter,\n    withFirebase,\n  )(WithAuthorization);\n};\nexport default withAuthorization;","import React from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport * as ROUTES from '../../constants/routes';\nimport { AuthUserContext } from '../Session';\n\nconst Navigation = () => (\n    <div>\n    <AuthUserContext.Consumer>\n      {authUser =>\n        authUser ? <NavigationAuth /> : <NavigationNonAuth />\n      }\n    </AuthUserContext.Consumer>\n  </div>  \n);\nconst NavigationAuth = () => (\n    <Navbar className=\"bg-light justify-content-between\">\n        <Navbar.Brand href={ROUTES.LANDING}>Kristy & George</Navbar.Brand>\n        <Navbar.Collapse>\n        <Nav className=\"ml-auto\">\n          <Nav.Link href={'george-kristy-wedding/#/home'}>Home</Nav.Link>\n          <Nav.Link href={'george-kristy-wedding/#/gallery'}>Gallery</Nav.Link>\n          <Nav.Link href={'george-kristy-wedding/#/account'}>Account</Nav.Link>\n          <Nav.Link href={'george-kristy-wedding/#/signout'}>Account</Nav.Link>\n        </Nav>\n        </Navbar.Collapse>\n    </Navbar>\n);\nconst NavigationNonAuth = () => (\n    <Navbar>\n      <Navbar.Brand href={'george-kristy-wedding/#/landing'}>Kristy & George</Navbar.Brand>\n      <Navbar.Collapse>\n        <Nav className=\"ml-auto\">\n          <Nav.Link href={'george-kristy-wedding/#/signin'}>Login</Nav.Link>\n          <Nav.Link href={'george-kristy-wedding/#/signup'}>Sign up</Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n);\nexport default Navigation;","import React, { Component } from 'react'\n\nimport { Image, Container, Row, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport BG from '../../img/kristy_george.png';\nimport GM from '../../img/getting_married.png';\nexport default class Landing extends Component {\n    render() {\n        return (\n        <Container fluid>\n            <Row>\n              <Col xs={4}>\n                <Image src={GM} rounded fluid />\n              </Col>\n              <Col xs={7}>\n                <Image \n                    src={BG} \n                    style={{\n                        boxShadow:'rgba(0, 0, 0, 0.75) 22px 22px 67px -19px',\n                        height: '100%',\n                        width: '100%',\n                    }}\n                    rounded \n                    fluid/>\n              </Col>\n            </Row>\n\n          </Container>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpPage = () => (\n  <div>    \n    <h1>SignUp</h1>\n    <SignUpForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n    username: '',\n    email: '',\n    passwordOne: '',\n    passwordTwo: '',\n    error: null,\n};\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {...INITIAL_STATE}\n  }\n  onSubmit = event => {\n    const { username, email, passwordOne } = this.state;\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        // Create a user in your Firebase realtime database\n        return this.props.firebase\n          .user(authUser.user.uid)\n          .set({\n            username,\n            email,\n          });\n      })\n      .then(authUser => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    event.preventDefault();\n  }\n  onChange = event => {\n      this.setState({ [event.target.name]: event.target.value });\n  };\n  render() {\n    const {\n        username,\n        email,\n        passwordOne,\n        passwordTwo,\n        error,\n    } = this.state;\n    \n    const isInvalid =\n        passwordOne !== passwordTwo ||\n        passwordOne === '' ||\n        email === '' ||\n        username === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Full Name\"\n        />\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">Sign Up</button>\n        {error && <p>{\"GO TO SIGN IN\"}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nconst SignUpForm = compose(\n        withRouter,\n        withFirebase,\n    )(SignUpFormBase);\nexport default SignUpPage;\nexport { SignUpForm, SignUpLink };","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nconst PasswordForgetPage = () => (\n  <div>\n    <h1>PasswordForget</h1>\n    <PasswordForgetForm />\n  </div>\n);\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n  onSubmit = event => {\n    const { email } = this.state;\n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    event.preventDefault();\n  };\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  render() {\n    const { email, error } = this.state;\n    const isInvalid = email === '';\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={this.state.email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\nexport default PasswordForgetPage;\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\nexport { PasswordForgetForm, PasswordForgetLink };","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nconst SignInPage = () => (\n  <div>\n    <h1>SignIn</h1>\n    <SignInForm />    \n    <PasswordForgetLink />\n    <SignUpLink />\n  </div>\n);\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n  onSubmit = event => {\n    const { email, password } = this.state;\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    event.preventDefault();\n  };\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  render() {\n    const { email, password, error } = this.state;\n    const isInvalid = password === '' || email === '';\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign In\n        </button>\n        {error && <p>Error</p>}\n      </form>\n    );\n  }\n}\nconst SignInForm = compose(\n  withRouter,\n  withFirebase,\n)(SignInFormBase);\nexport default SignInPage;\nexport { SignInForm };","import React from 'react';\nimport { withFirebase } from '../Firebase';\nconst SignOutButton = ({ firebase }) => (\n  <button type=\"button\" onClick={firebase.doSignOut}>\n    Sign Out\n  </button>\n);\nexport default withFirebase(SignOutButton);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { Col, Form, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport app from 'firebase/app';\nimport 'firebase/firestore';\nimport { withAuthorization } from '../Session';\nimport './Home.css';\nimport { withFirebase } from '../Firebase';\n\nconst HomePage = () => (\n  <div>\n    <HomePageForm/>\n  </div>\n)\nconst INITIAL_STATE = {\n  name: '',\n  num_party: '',\n  notes: '',\n};\n\nclass HomePageBase extends Component{\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n    this.db = app.firestore();\n  }\n  onSubmit = event => {\n    const { name, num_party, attending, notes } = this.state;\n    var isAttending = (attending === \"Yes\");\n\n    this.db.collection(\"attendants\").doc(name).set({\n      name,\n      num_party,\n      attending: isAttending,\n      notes\n    }).then(() => {console.log(\"success\")})\n    .catch(e => {console.log(\"ERROR:\"+e)});\n    event.preventDefault();\n  };\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value});\n  };\n  render() {\n    return (\n\n      <Form onSubmit={this.onSubmit}>\n        <Form.Group as={Col} controlID=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control name=\"name\" type=\"text\" placeholder=\"Full Name\" onChange={this.onChange}/>\n        </Form.Group>\n\n        <Form.Group as={Col} controlID=\"num_party\">\n          <Form.Label>Number in Party</Form.Label>\n          <Form.Control name=\"num_party\" type=\"number\" placeholder=\"0\" min=\"0\" onChange={this.onChange}/>\n        </Form.Group>\n\n        \n        <Form.Group as={Col} controlId=\"attending\">\n          <Form.Label>Attending</Form.Label>\n          <Form.Control name=\"attending\" as=\"select\" placeholder=\"Choose one...\"onChange={this.onChange}>\n            <option>Choose one...</option>\n            <option>Yes</option>\n            <option>No</option>\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group as={Col} controlId=\"notes\">\n          <Form.Label>Notes for Bride and Groom</Form.Label>\n          <Form.Control name=\"notes\" as=\"textarea\" rows=\"3\" onChange={this.onChange}/>\n        </Form.Group>\n\n        <div className=\"col-12 text-right\">\n          <Button className=\"btn\" variant=\"primary\" type=\"submit\" >\n            Submit\n          </Button>\n        </div>\n      </Form>\n    );\n  }\n}\nconst condition = authUser => !!authUser;\nconst HomePageForm = compose(\n  withAuthorization(condition),\n  withRouter,\n  withFirebase,\n)(HomePageBase);\nexport default HomePage;\nexport {HomePageForm};","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n  onSubmit = event => {\n    const { passwordOne } = this.state;\n    this.props.firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    event.preventDefault();\n  };\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n    const isInvalid =\n      passwordOne !== passwordTwo || passwordOne === '';\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\nexport default withFirebase(PasswordChangeForm);","import React from 'react';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport PasswordChangeForm from '../PasswordChange';\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <div>\n        <h1>Account: {authUser.email}</h1>\n        <PasswordForgetForm />\n        <PasswordChangeForm />\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(AccountPage);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { Image, Container, Carousel, CarouselItem } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport app from 'firebase/app';\nimport 'firebase/firestore';\nimport { withAuthorization } from '../Session';\nimport { withFirebase } from '../Firebase';\n\nimport BG from '../../img/kristy_george.png';\nimport FTG from '../../img/family_thanksgiving.jpg';\nimport FD from '../../img/first_dates.jpg';\nimport GC from '../../img/kristy_george_grand_canyon.jpg';\nimport LT from '../../img/kristy_george_lake_teton.jpg';\nimport GT from '../../img/kristy_george_teton.jpg';\nimport MB from '../../img/military_banquet.jpg';\nconst GalleryPage = () => (\n  <div>\n    <GalleryPageForm/>\n  </div>\n)\nconst INITIAL_STATE = [\n    {\n        title:'Engagement Photos',\n        img:BG  \n    },\n    {\n        title:'Thanksgiving /W Family',\n        img:FTG\n    },\n    {\n        title:'First Dates',\n        img:FD\n    },\n    {\n        title:'Grand Canyon',\n        img:GC\n    },\n    {\n        title:'Lake Day!',\n        img:LT\n    },\n    {\n        title:'Grand Teton',\n        img:GT\n    },\n    {\n        title:'Military Banquet',\n        img:MB\n    }];\n\nclass GalleryPageBase extends Component{\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n    this.db = app.firestore();\n  }\n  onSubmit = event => {\n    const { name, num_party, attending, notes } = this.state;\n    var isAttending = (attending === \"Yes\");\n\n    this.db.collection(\"attendants\").doc(name).set({\n      name,\n      num_party,\n      attending: isAttending,\n      notes\n    }).then(() => {console.log(\"success\")})\n    .catch(e => {console.log(\"ERROR:\"+e)});\n    event.preventDefault();\n  };\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value});\n  };\n  render() {\n    var elements = [];\n    for(var key in this.state){\n        elements.push(\n            <CarouselItem>\n                <Image \n                    src={this.state[key]['img']} \n                    style={{\n                        maxHeight:750,                       \n                        boxShadow:'rgba(0, 0, 0, 0.75) 22px 22px 67px -19px',\n                    }} \n                    rounded\n                /> \n            </CarouselItem>\n        )\n    }\n\n    return (\n        <Container style={{ display:'flex', justifyContent:'center' }}>\n            <Carousel>\n            {elements}\n            </Carousel>\n        </Container>\n      \n    );\n  }\n}\nconst condition = authUser => !!authUser;\nconst GalleryPageForm = compose(\n  withAuthorization(condition),\n  withRouter,\n  withFirebase,\n)(GalleryPageBase);\nexport default GalleryPage;\nexport {GalleryPageForm};","import React from 'react';\nimport { \n    HashRouter,\n    Route \n} from 'react-router-dom';\n\nimport Navigation from '../Navigation';\nimport LandingPage from '../Landing';\nimport SignUpPage from '../SignUp';\nimport SignInPage from '../SignIn';\nimport SignOutButton from '../SignOut';\nimport HomePage from '../Home';\nimport AccountPage from '../Account';\nimport GalleryPage from '../Gallery';\n\nimport * as ROUTES from '../../constants/routes';\nimport { withAuthentication } from '../Session';\nconst App = () => (  \n  <HashRouter basename='/george-kristy-wedding'>\n    <div>\n      <Navigation />\n      <hr />\n      <Route exact path={ROUTES.LANDING} component={LandingPage} />\n      <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n      <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n      <Route path={'/signout'} component={SignOutButton} />\n      \n      <Route path={ROUTES.HOME} component={HomePage} />\n      <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n      <Route path={ROUTES.GALLERY} component={GalleryPage} />\n    </div>\n  </HashRouter>\n);\n\nexport default withAuthentication(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/App';\nimport Firebase, { FirebaseContext } from './components/Firebase';\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root'),\n);\nserviceWorker.unregister();"],"sourceRoot":""}